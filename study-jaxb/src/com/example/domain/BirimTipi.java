//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.12.23 at 07:34:36 PM EET 
//


package com.example.domain;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for birimTipi.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="birimTipi">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="mm"/>
 *     &lt;enumeration value="cm"/>
 *     &lt;enumeration value="km"/>
 *     &lt;enumeration value="m"/>
 *     &lt;enumeration value="sec"/>
 *     &lt;enumeration value="adet"/>
 *     &lt;enumeration value="hp"/>
 *     &lt;enumeration value="m3"/>
 *     &lt;enumeration value="lt"/>
 *     &lt;enumeration value="cc"/>
 *     &lt;enumeration value="kg"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "birimTipi")
@XmlEnum
public enum BirimTipi {

    @XmlEnumValue("mm")
    MM("mm"),
    @XmlEnumValue("cm")
    CM("cm"),
    @XmlEnumValue("km")
    KM("km"),
    @XmlEnumValue("m")
    M("m"),
    @XmlEnumValue("sec")
    SEC("sec"),
    @XmlEnumValue("adet")
    ADET("adet"),
    @XmlEnumValue("hp")
    HP("hp"),
    @XmlEnumValue("m3")
    M_3("m3"),
    @XmlEnumValue("lt")
    LT("lt"),
    @XmlEnumValue("cc")
    CC("cc"),
    @XmlEnumValue("kg")
    KG("kg");
    private final String value;

    BirimTipi(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static BirimTipi fromValue(String v) {
        for (BirimTipi c: BirimTipi.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
