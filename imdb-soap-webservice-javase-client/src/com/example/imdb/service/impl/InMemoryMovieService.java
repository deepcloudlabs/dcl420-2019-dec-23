
package com.example.imdb.service.impl;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "InMemoryMovieService", targetNamespace = "http://impl.service.imdb.example.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface InMemoryMovieService {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<com.example.imdb.service.impl.Movie>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllMoviesByCriteria", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllMoviesByCriteria")
    @ResponseWrapper(localName = "findAllMoviesByCriteriaResponse", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllMoviesByCriteriaResponse")
    public List<Movie> findAllMoviesByCriteria(
        @WebParam(name = "arg0", targetNamespace = "")
        CriteriaBean arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<com.example.imdb.service.impl.Movie>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllMoviesByDirectorId", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllMoviesByDirectorId")
    @ResponseWrapper(localName = "findAllMoviesByDirectorIdResponse", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllMoviesByDirectorIdResponse")
    public List<Movie> findAllMoviesByDirectorId(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<com.example.imdb.service.impl.Genre>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllGenres", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllGenres")
    @ResponseWrapper(localName = "findAllGenresResponse", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllGenresResponse")
    public List<Genre> findAllGenres();

    /**
     * 
     * @param genre
     * @return
     *     returns java.util.List<com.example.imdb.service.impl.Movie>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllMoviesByGenre", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllMoviesByGenre")
    @ResponseWrapper(localName = "findAllMoviesByGenreResponse", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllMoviesByGenreResponse")
    public List<Movie> findAllMoviesByGenre(
        @WebParam(name = "genre", targetNamespace = "")
        String genre);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.example.imdb.service.impl.Genre
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findGenreByName", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindGenreByName")
    @ResponseWrapper(localName = "findGenreByNameResponse", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindGenreByNameResponse")
    public Genre findGenreByName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<com.example.imdb.service.impl.Director>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllDirectors", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllDirectors")
    @ResponseWrapper(localName = "findAllDirectorsResponse", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllDirectorsResponse")
    public List<Director> findAllDirectors();

    /**
     * 
     * @param arg0
     * @return
     *     returns com.example.imdb.service.impl.Movie
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addMovie", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.AddMovie")
    @ResponseWrapper(localName = "addMovieResponse", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.AddMovieResponse")
    public Movie addMovie(
        @WebParam(name = "arg0", targetNamespace = "")
        Movie arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<com.example.imdb.service.impl.Movie>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllMoviesByYearRange", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllMoviesByYearRange")
    @ResponseWrapper(localName = "findAllMoviesByYearRangeResponse", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllMoviesByYearRangeResponse")
    public List<Movie> findAllMoviesByYearRange(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @return
     *     returns java.util.List<com.example.imdb.service.impl.Movie>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllMovies", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllMovies")
    @ResponseWrapper(localName = "findAllMoviesResponse", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllMoviesResponse")
    public List<Movie> findAllMovies();

    /**
     * 
     * @param arg0
     * @return
     *     returns com.example.imdb.service.impl.Movie
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMovieById", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindMovieById")
    @ResponseWrapper(localName = "findMovieByIdResponse", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindMovieByIdResponse")
    public Movie findMovieById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "populate", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.Populate")
    @ResponseWrapper(localName = "populateResponse", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.PopulateResponse")
    public void populate();

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<com.example.imdb.service.impl.Movie>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllMoviesByYearRangeAndGenre", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllMoviesByYearRangeAndGenre")
    @ResponseWrapper(localName = "findAllMoviesByYearRangeAndGenreResponse", targetNamespace = "http://impl.service.imdb.example.com/", className = "com.example.imdb.service.impl.FindAllMoviesByYearRangeAndGenreResponse")
    public List<Movie> findAllMoviesByYearRangeAndGenre(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

}
